type Query
    {
        usersData:usersDataOutput @resolver(class :"Form\\Empmodule\\Model\\Resolver\\Store") @doc(description: "List of Users Data")
    }
type usersDataOutput
    {
        total_count:Int @doc(description:"Total Users"),
        items:[usersData] @doc(description:"User Data")
    }

type usersData
    {
        firstname:String @doc(description:"first name"), 
        lastname:String @doc(description:"last name"),
        email:String @doc(description:"email"),
        telephone:String @doc(description:"telephone"),
        city:String @doc(description:"city"),
        state:String @doc(description:"state"),
        country:String @doc(description:"country")
    }


type Mutation 
    {
        Groupdata (input: datasInput! @doc(description:"Input")):
        GroupdataOutput @resolver(class:"Form\\Empmodule\\Model\\Resolver\\customergroup")
        @doc(description:"Output of Mutation ")
    }

input datasInput 
    {
        groupId:Int! @doc(description:"Enter Group Id")
        groupName:String! @doc(description:"Enter Group Name")
    }

type GroupdataOutput 
    {
        groupId:Int @doc(description:"Mutation_Message")
        groupName:String @doc(description:"Mutation_Message")
    }